{"version":3,"sources":["history.js","components/CategoryList.js","actions/index.js","components/Product.js","components/ProductDetail.js","components/ShowCart.js","components/App.js","reducers/index.js","index.js"],"names":["createBrowserHistory","CategoryList","renderCategory","categories_id","props","categories","forEach","product","includes","category","push","map","ele","className","key","to","onClick","showCategory","this","type","React","Component","connect","state","products","payload","localStorage","setItem","parseInt","getItem","showProductDetails","useState","sortState","setSortState","filterCategory","setFilterCategory","auxCopyState","deepCopyState","item","filter","price","filteringFunction","sort","a","b","productListRender","sortDescending","returnElement","product_id","product_title","showProduct","focusedProduct","addToCart","detail","i","console","log","cart","JSON","parse","removeFromCart","totalPrice","length","App","history","path","exact","component","Product","ProductDetail","ShowCart","combineReducers","action","auxCart","removeProduct","stringify","ReactDOM","render","store","createStore","reducers","document","getElementById"],"mappings":"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","file":"static/js/main.e61457a9.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'; \r\nexport default createBrowserHistory();\r\n","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { showCategory } from '../actions';\r\n\r\n\r\nimport {Link} from 'react-router-dom';\r\n \r\n\r\nclass CategoryList extends React.Component{\r\n\r\n    renderCategory = () => {\r\n        \r\n        const categories_id = [];\r\n        //getting categories id from all products\r\n        this.props.categories.forEach(product => {\r\n            if(!(categories_id.includes(product.category))){\r\n                categories_id.push(product.category);\r\n            }\r\n        });\r\n        \r\n        return categories_id.map(ele => {\r\n            return (\r\n                    <div className=\"card\" key={ele}>\r\n                        <div className=\"content\">\r\n                            <div className=\"header\">                        \r\n                                {\"Category: \"+ ele}\r\n                            </div>\r\n                            <div className=\"extra content\">\r\n                                <div className=\"ui two buttons\">\r\n                                    <Link to=\"/ecommerce/product\">\r\n                                        <button className=\"ui basic green button\"\r\n                                        onClick={() => this.props.showCategory(ele)}\r\n                                        >\r\n                                        Show\r\n                                        </button>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n        });\r\n\r\n    };\r\n    \r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className=\"ui cards\">\r\n                {\r\n                    this.renderCategory()\r\n                }\r\n                </div>\r\n                <Link to=\"/ecommerce/showCart/\"><button type=\"button\">Go To Cart</button></Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        categories: state.products,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {showCategory})(CategoryList);","// Action creator selected category\r\nexport const showProductDetails = (product) => {\r\n    return {\r\n        type: \"SHOW_PRODUCT_DETAILS\",\r\n        payload: product\r\n    }\r\n};\r\n\r\n// Action creator selected product\r\nexport const showCategory = (category) => {\r\n    return {\r\n        type: \"SHOW_CATEGORY_LIST\",\r\n        payload: category\r\n    }\r\n};\r\n\r\n//Action creator add to cart\r\nexport const addToCart = (product) => {\r\n    return {\r\n        type: \"ADD_TO_CART\",\r\n        payload: product\r\n    }\r\n}\r\n\r\n//Remove from cart\r\nexport const removeFromCart = (product) => {\r\n    return {\r\n        type: \"REMOVE_FROM_CART\",\r\n        payload: product\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {showProductDetails} from '../actions';\r\n\r\nconst Products = (props) => {\r\n\r\n    const [sortState, setSortState] = React.useState(false);\r\n    const [filterCategory, setFilterCategory] = React.useState(0);\r\n\r\n    const sortAscending = (products) => {\r\n        products.sort((a,b) => {\r\n            if(a.price < b.price) return -1;\r\n            if(a.price > b.price) return 1;\r\n            return 0;\r\n        });\r\n        return productListRender(products, props.category, props.showProductDetails);\r\n    };\r\n\r\n    \r\n    const sortDescending = (products) => {\r\n        products.sort((a,b) => {\r\n            if(a.price < b.price) return 1;\r\n            if(a.price > b.price) return -1;\r\n            return 0;\r\n        });\r\n        return productListRender(products, props.category, props.showProductDetails);\r\n    };\r\n\r\n    //filter function before rendering\r\n    const filteringFunction = (category) => {\r\n        \r\n        const deepCopyState = props.products.map(item => {\r\n            return {...item}\r\n        });\r\n\r\n        if(category === 1){\r\n            return deepCopyState.filter(ele => ele.price <= 300);\r\n        }\r\n        if (category === 2){\r\n            return deepCopyState.filter(ele => ele.price > 300);\r\n        }\r\n        return deepCopyState;\r\n    }\r\n\r\n    //utility function\r\n    const returnElement = () =>{\r\n\r\n        const auxCopyState = filteringFunction(filterCategory);\r\n        \r\n        if(sortState){\r\n            return sortAscending(auxCopyState);\r\n        }\r\n        return sortDescending(auxCopyState);\r\n    }\r\n\r\n    return (\r\n    <div>\r\n\r\n        <p>\r\n            <button type=\"button\" onClick= {() => setSortState(true)}>Show low price to high</button>\r\n            <button type=\"button\" onClick= {() => setSortState(false)}>Show high price to low</button>\r\n        </p>\r\n        <p>\r\n            <button type=\"button\" onClick = {() => setFilterCategory(1)}>Filter products less than or equal to Rs 300</button>\r\n            <button type=\"button\" onClick = {() => setFilterCategory(2)}>Filter products more than Rs 300</button>\r\n            <button type=\"button\" onClick = {() => setFilterCategory(0)}>No Filter</button>\r\n        </p>\r\n        <div className=\"ui cards\">{returnElement()}</div>\r\n    </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    if(state.showCategory){    \r\n        localStorage.setItem(\"showCategory\", state.showCategory);\r\n    }\r\n    return {\r\n        products: state.products,\r\n        category: state.showCategory || parseInt(localStorage.getItem(\"showCategory\"))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps,{showProductDetails})(Products);\r\n\r\n\r\n\r\nconst productListRender = (products, category, showProductDetails) => \r\n    {\r\n        return products.map(product => {\r\n        if(product.category === category){\r\n            return (\r\n                <div key={product.product_id} className=\"card\">\r\n                        <div className=\"content\">\r\n                            <div className=\"header\">\r\n                                Title: {product.product_title}\r\n                            </div>\r\n                            <div className=\"description\">\r\n                                Price: Rs {product.price}\r\n                            </div>\r\n                            <div className=\"extra content\">\r\n                                <div className=\"ui two buttons\">\r\n                                    <Link to=\"/ecommerce/product/detail\">\r\n                                        <button className=\"ui basic green button\"\r\n                                        onClick={() => showProductDetails(product.product_id)}\r\n                                        >Show Details\r\n                                        </button>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            return <div key={product.product_id}></div>;\r\n        });\r\n    }","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {addToCart} from '../actions';\r\n\r\nconst ProductDetail = (props) => {\r\n    if(props.focusedProduct){\r\n        const focusedProduct = props.products.filter(product => product.product_id === props.focusedProduct)[0];\r\n        return (\r\n        <div className=\"ui items\">\r\n            <div className=\"ui item\">\r\n                <div className=\"content\">\r\n                    <div className=\"header\">            \r\n                       <h1>Product Details:</h1>\r\n                    </div>\r\n                    <div className=\"description\">\r\n                        <p>Product Title: {focusedProduct.product_title}</p>\r\n                        <p>Product Description: {focusedProduct.detail}</p>\r\n                        <p>Product id: {focusedProduct.product_id}</p>\r\n                        <p>Product Category: {focusedProduct.category}</p>\r\n                        <p className=\"ui basic red\">Price: {focusedProduct.price}</p>\r\n                    </div>\r\n                    \r\n                    <div className=\"extra content\">\r\n                        <div className=\"ui one button\">\r\n                            <button className=\"ui basic primary button\" onClick={() => props.addToCart(focusedProduct)}>Add To Cart</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n        );\r\n    }\r\n    return <div></div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    if(state.showProduct){    \r\n        localStorage.setItem(\"showProduct\", state.showProduct);\r\n    }\r\n\r\n    return {\r\n        products: state.products,\r\n        focusedProduct: state.showProduct || parseInt(localStorage.getItem(\"showProduct\"))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {addToCart})(ProductDetail);","import React from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport {removeFromCart} from '../actions';\r\n\r\nlet i = 0;\r\n\r\n// component defined here\r\nconst ShowCart = (props) => {\r\n    let totalPrice = 0;\r\n    if(props.cart.length>0){\r\n        return (\r\n        <div>\r\n            <h1>Cart</h1>\r\n            {\r\n                props.cart.map(product => {\r\n                    return (\r\n                        totalPrice += product.price,\r\n                        <div key={++i}>\r\n                            <p>Product Title: {product.product_title} Price: {product.price}</p>\r\n                            <button onClick={() => props.removeFromCart(product)}>Remove</button>\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n            <h3>Total Price: {totalPrice}</h3>\r\n        </div>\r\n        );\r\n    }\r\n    return <div>Cart is empty. GO SHOPPING!!!</div>;\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    \r\n    console.log();\r\n    return {\r\n        cart: state.cart || JSON.parse(localStorage.getItem(\"cart\")),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {removeFromCart})(ShowCart);","import React from 'react';\r\n\r\n\r\nimport {Router,Route} from 'react-router-dom';\r\nimport history from '../history';\r\n\r\nimport CategoryList from './CategoryList';\r\nimport Product from './Product';\r\nimport ProductDetail from './ProductDetail';\r\nimport ShowCart from './ShowCart';\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n    <div>\r\n        <Router history={history}>\r\n            <Route path = \"/ecommerce/\" exact component={CategoryList} />\r\n            <Route path = \"/ecommerce/product\" exact component={Product} />\r\n            <Route path = \"/ecommerce/product/detail\" exact component={ProductDetail} />\r\n            <Route path = \"/ecommerce/showCart/\" exact component={ShowCart} />\r\n        </Router>\r\n    </div>\r\n    );\r\n};\r\n\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\n\r\nconst productsReducer = () => {\r\n    return [\r\n        {product_id: 1, category: 1, product_title: \"abc\", detail: \"good for health\", price: 200},\r\n        {product_id: 2, category: 2, product_title: \"def\", detail: \"good for fitness\", price: 300},\r\n        {product_id: 3, category: 1, product_title: \"jkl\", detail: \"good for mental health\", price: 400},\r\n        {product_id: 4, category: 2, product_title: \"stu\", detail: \"good for pysical fitness\", price: 500}\r\n    ]\r\n};\r\n\r\nconst showProductReducer = (showProduct=null, action) => {\r\n    if (action.type === \"SHOW_PRODUCT_DETAILS\"){\r\n        return action.payload;\r\n    }\r\n    return showProduct;\r\n}\r\n\r\nconst showCategoryReducer = (showCategory = null, action) => {\r\n    if (action.type === \"SHOW_CATEGORY_LIST\"){\r\n        return action.payload;\r\n    }\r\n    return showCategory;\r\n}\r\n\r\n\r\nconst cartReducer = (cart = [], action) => {\r\n    let auxCart = [...cart];\r\n\r\n    if(action.type === \"ADD_TO_CART\"){\r\n        auxCart = [...auxCart, action.payload];\r\n\r\n    }else if(action.type === \"REMOVE_FROM_CART\"){\r\n        const removeProduct = action.payload;\r\n        auxCart = cart.filter(product => product.product_id !== removeProduct.product_id);\r\n    }\r\n    \r\n    localStorage.setItem(\"cart\", JSON.stringify(auxCart));\r\n\r\n    return auxCart;\r\n}\r\n\r\nexport default combineReducers({\r\n    products: productsReducer,\r\n    showProduct: showProductReducer,\r\n    showCategory: showCategoryReducer,\r\n    cart: cartReducer,\r\n})","import React from 'react';\r\nimport ReactDOM  from 'react-dom';\r\nimport App from './components/App';\r\n\r\nimport {Provider} from 'react-redux';\r\nimport {createStore } from 'redux';\r\n\r\nimport reducers from './reducers';\r\n\r\n\r\nReactDOM.render(<Provider store={createStore(reducers)}><App /></Provider>, document.getElementById('root'));\r\n"],"sourceRoot":""}