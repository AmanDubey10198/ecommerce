{"version":3,"sources":["history.js","components/CategoryList.js","actions/index.js","components/Checkout.js","components/Product.js","components/ProductDetail.js","components/ShowCart.js","components/App.js","reducers/index.js","index.js"],"names":["createBrowserHistory","CategoryList","renderCategory","categories_id","props","categories","forEach","product","includes","category","push","map","ele","className","key","to","onClick","showCategory","this","type","React","Component","connect","state","products","payload","i","console","log","cart","JSON","parse","localStorage","getItem","totalPrice","length","price","product_title","alert","setItem","parseInt","showProductDetails","useState","sortState","setSortState","filterCategory","setFilterCategory","searchWord","setSearchWord","name","id","document","getElementById","value","auxCopyState","deepCopyState","item","filter","filteringFunction","sort","a","b","productListRender","sortAscending","sortDescending","returnElement","product_id","showProduct","focusedProduct","addToCart","detail","removeFromCart","App","history","path","exact","component","Product","ProductDetail","ShowCart","Checkout","combineReducers","action","auxCart","removeProduct","flag","stringify","ReactDOM","render","store","createStore","reducers"],"mappings":"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","file":"static/js/main.e95650ba.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'; \r\nexport default createBrowserHistory();\r\n","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { showCategory } from '../actions';\r\n\r\n\r\nimport {Link} from 'react-router-dom';\r\n \r\n\r\nclass CategoryList extends React.Component{\r\n\r\n    renderCategory = () => {\r\n        \r\n        const categories_id = [];\r\n        //getting categories id from all products\r\n        this.props.categories.forEach(product => {\r\n            if(!(categories_id.includes(product.category))){\r\n                categories_id.push(product.category);\r\n            }\r\n        });\r\n        \r\n        return categories_id.map(ele => {\r\n            return (\r\n                    <div className=\"card\" key={ele}>\r\n                        <div className=\"content\">\r\n                            <div className=\"header\">                        \r\n                                {\"Category: \"+ ele}\r\n                            </div>\r\n                            <div className=\"extra content\">\r\n                                <div className=\"ui two buttons\">\r\n                                    <Link to=\"/ecommerce/product\">\r\n                                        <button className=\"ui basic green button\"\r\n                                        onClick={() => this.props.showCategory(ele)}\r\n                                        >\r\n                                        Show\r\n                                        </button>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n        });\r\n\r\n    };\r\n    \r\n    render(){\r\n        return (\r\n            <div>\r\n                <div className=\"ui cards\">\r\n                {\r\n                    this.renderCategory()\r\n                }\r\n                </div>\r\n                <Link to=\"/ecommerce/showCart/\"><button type=\"button\">Go To Cart</button></Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        categories: state.products,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {showCategory})(CategoryList);","// Action creator selected category\r\nexport const showProductDetails = (product) => {\r\n    return {\r\n        type: \"SHOW_PRODUCT_DETAILS\",\r\n        payload: product\r\n    }\r\n};\r\n\r\n// Action creator selected product\r\nexport const showCategory = (category) => {\r\n    return {\r\n        type: \"SHOW_CATEGORY_LIST\",\r\n        payload: category\r\n    }\r\n};\r\n\r\n//Action creator add to cart\r\nexport const addToCart = (product) => {\r\n    return {\r\n        type: \"ADD_TO_CART\",\r\n        payload: product\r\n    }\r\n}\r\n\r\n//Remove from cart\r\nexport const removeFromCart = (product) => {\r\n    return {\r\n        type: \"REMOVE_FROM_CART\",\r\n        payload: product\r\n    }\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nlet i = 0;\r\n\r\n// component defined here\r\nconst Checkout = (props) => {\r\n    let totalPrice = 0;\r\n    if(props.cart.length>0){\r\n        return (\r\n        <div>\r\n            <h1>Cart</h1>\r\n            {\r\n                props.cart.map(product => {\r\n                    return (\r\n                        totalPrice += product.price,\r\n                        <div key={++i}>\r\n                            <p>Product Title: {product.product_title} Price: {product.price}</p>\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n            <h3>Total Price: Rs {totalPrice}</h3>\r\n            <Link to=\"/ecommerce\"><button type=\"button\" onClick={() => alert(\"Order placed!!!\")}>Buy</button></Link>\r\n        </div>\r\n        );\r\n    }\r\n    return <div>Nothing bought yet. GO SHOPPING!!!</div>;\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    \r\n    console.log();\r\n    return {\r\n        cart: state.cart || JSON.parse(localStorage.getItem(\"cart\")),\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {showProductDetails} from '../actions';\r\n\r\nconst Products = (props) => {\r\n\r\n    const [sortState, setSortState] = React.useState(false);\r\n    const [filterCategory, setFilterCategory] = React.useState(0);\r\n    const [searchWord, setSearchWord] = React.useState(\"\");\r\n\r\n    const sortAscending = (products) => {\r\n        products.sort((a,b) => {\r\n            if(a.price < b.price) return -1;\r\n            if(a.price > b.price) return 1;\r\n            return 0;\r\n        });\r\n        return productListRender(products, props.category, props.showProductDetails);\r\n    };\r\n\r\n    \r\n    const sortDescending = (products) => {\r\n        products.sort((a,b) => {\r\n            if(a.price < b.price) return 1;\r\n            if(a.price > b.price) return -1;\r\n            return 0;\r\n        });\r\n        return productListRender(products, props.category, props.showProductDetails);\r\n    };\r\n\r\n    //filter function before rendering\r\n    const filteringFunction = (category) => {\r\n        \r\n        const deepCopyState = props.products.map(item => {\r\n            return {...item}\r\n        });\r\n\r\n        if(category === 1){\r\n            return deepCopyState.filter(ele => ele.price <= 300);\r\n        }\r\n        if (category === 2){\r\n            return deepCopyState.filter(ele => ele.price > 300);\r\n        }\r\n        return deepCopyState;\r\n    }\r\n\r\n    //filtering on searchword\r\n    const filterOnWord = (products) => {\r\n        console.log(searchWord);\r\n        if(searchWord === \"\"){\r\n            return products;\r\n        }\r\n\r\n        return products.filter(product => product.product_title.includes(searchWord));\r\n\r\n    }\r\n\r\n    //utility function\r\n    const returnElement = () =>{\r\n\r\n        const auxCopyState = filterOnWord(filteringFunction(filterCategory));\r\n\r\n        \r\n        \r\n        if(sortState){\r\n            return sortAscending(auxCopyState);\r\n        }\r\n        return sortDescending(auxCopyState);\r\n    }\r\n\r\n    return (\r\n    <div>\r\n\r\n        <p>\r\n            <button type=\"button\" onClick= {() => setSortState(true)}>Show low price to high</button>\r\n            <button type=\"button\" onClick= {() => setSortState(false)}>Show high price to low</button>\r\n        </p>\r\n        <p>\r\n            <button type=\"button\" onClick = {() => setFilterCategory(1)}>Filter products less than or equal to Rs 300</button>\r\n            <button type=\"button\" onClick = {() => setFilterCategory(2)}>Filter products more than Rs 300</button>\r\n            <button type=\"button\" onClick = {() => setFilterCategory(0)}>No Filter</button>\r\n        </p>\r\n\r\n        <p>\r\n            <input type=\"text\" name=\"searchbar\" id=\"textBar\" /> <button onClick={() => setSearchWord(document.getElementById(\"textBar\").value)} >Search</button>\r\n        </p>\r\n        <div className=\"ui cards\">{returnElement()}</div>\r\n        \r\n        <Link to=\"/ecommerce/showCart/\"><button type=\"button\">Go To Cart</button></Link>\r\n    </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    if(state.showCategory){    \r\n        localStorage.setItem(\"showCategory\", state.showCategory);\r\n    }\r\n    return {\r\n        products: state.products,\r\n        category: state.showCategory || parseInt(localStorage.getItem(\"showCategory\"))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps,{showProductDetails})(Products);\r\n\r\n\r\n\r\nconst productListRender = (products, category, showProductDetails) => \r\n    {\r\n        return products.map(product => {\r\n        if(product.category === category){\r\n            return (\r\n                <div key={product.product_id} className=\"card\">\r\n                        <div className=\"content\">\r\n                            <div className=\"header\">\r\n                                Title: {product.product_title}\r\n                            </div>\r\n                            <div className=\"description\">\r\n                                Price: Rs {product.price}\r\n                            </div>\r\n                            <div className=\"extra content\">\r\n                                <div className=\"ui two buttons\">\r\n                                    <Link to=\"/ecommerce/product/detail\">\r\n                                        <button className=\"ui basic green button\"\r\n                                        onClick={() => showProductDetails(product.product_id)}\r\n                                        >Show Details\r\n                                        </button>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            return <div key={product.product_id}></div>;\r\n        });\r\n    }","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {addToCart} from '../actions';\r\n\r\nconst ProductDetail = (props) => {\r\n    if(props.focusedProduct){\r\n        const focusedProduct = props.products.filter(product => product.product_id === props.focusedProduct)[0];\r\n        return (\r\n        <div className=\"ui items\">\r\n            <div className=\"ui item\">\r\n                <div className=\"content\">\r\n                    <div className=\"header\">            \r\n                       <h1>Product Details:</h1>\r\n                    </div>\r\n                    <div className=\"description\">\r\n                        <p>Product Title: {focusedProduct.product_title}</p>\r\n                        <p>Product Description: {focusedProduct.detail}</p>\r\n                        <p>Product id: {focusedProduct.product_id}</p>\r\n                        <p>Product Category: {focusedProduct.category}</p>\r\n                        <p className=\"ui basic red\">Price: {focusedProduct.price}</p>\r\n                    </div>\r\n                    \r\n                    <div className=\"extra content\">\r\n                        <div className=\"ui one button\">\r\n                            <button className=\"ui basic primary button\" onClick={() => props.addToCart(focusedProduct)}>Add To Cart</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <Link to=\"/ecommerce/showCart/\"><button type=\"button\">Go To Cart</button></Link>\r\n        </div>\r\n        );\r\n    }\r\n    return <div></div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    if(state.showProduct){    \r\n        localStorage.setItem(\"showProduct\", state.showProduct);\r\n    }\r\n\r\n    return {\r\n        products: state.products,\r\n        focusedProduct: state.showProduct || parseInt(localStorage.getItem(\"showProduct\"))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {addToCart})(ProductDetail);","import React from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {removeFromCart} from '../actions';\r\n\r\nlet i = 0;\r\n\r\n// component defined here\r\nconst ShowCart = (props) => {\r\n    if(props.cart.length>0){\r\n        return (\r\n        <div>\r\n            <h1>Cart</h1>\r\n            {\r\n                props.cart.map(product => {\r\n                    return (\r\n                        <div key={++i}>\r\n                            <p>Product Title: {product.product_title} Price: {product.price}</p>\r\n                            <button onClick={() => props.removeFromCart(product)}>Remove</button>\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n            <Link to=\"/ecommerce/showCart/checkout/\"><button type=\"button\">Checkout</button></Link>\r\n        </div>\r\n        );\r\n    }\r\n    return <div>Cart is empty. GO SHOPPING!!!</div>;\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    \r\n    console.log();\r\n    return {\r\n        cart: state.cart || JSON.parse(localStorage.getItem(\"cart\")),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {removeFromCart})(ShowCart);","import React from 'react';\r\n\r\n\r\nimport {Router,Route} from 'react-router-dom';\r\nimport history from '../history';\r\n\r\nimport CategoryList from './CategoryList';\r\nimport Checkout from './Checkout';\r\nimport Product from './Product';\r\nimport ProductDetail from './ProductDetail';\r\nimport ShowCart from './ShowCart';\r\n\r\nconst App = () => {\r\n    return (\r\n    <div>\r\n        <Router history={history}>\r\n            <Route path = \"/ecommerce/\" exact component={CategoryList} />\r\n            <Route path = \"/ecommerce/product\" exact component={Product} />\r\n            <Route path = \"/ecommerce/product/detail\" exact component={ProductDetail} />\r\n            <Route path = \"/ecommerce/showCart/\" exact component={ShowCart} />\r\n            <Route path = \"/ecommerce/showCart/checkout/\" exact component={Checkout} />\r\n        </Router>\r\n    </div>\r\n    );\r\n};\r\n\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\n\r\nconst productsReducer = () => {\r\n    return [\r\n        {product_id: 1, category: 1, product_title: \"mango\", detail: \"good for health\", price: 200},\r\n        {product_id: 2, category: 2, product_title: \"banana\", detail: \"good for fitness\", price: 300},\r\n        {product_id: 3, category: 1, product_title: \"guava\", detail: \"good for mental health\", price: 400},\r\n        {product_id: 4, category: 2, product_title: \"watermelon\", detail: \"good for pysical fitness\", price: 500},\r\n        {product_id: 5, category: 3, product_title: \"potato\", detail: \"nutritious\", price: 100},\r\n        {product_id: 6, category: 3, product_title: \"lady finger\", detail: \"gives protein\", price: 200}\r\n    ]\r\n};\r\n\r\nconst showProductReducer = (showProduct=null, action) => {\r\n    if (action.type === \"SHOW_PRODUCT_DETAILS\"){\r\n        return action.payload;\r\n    }\r\n    return showProduct;\r\n}\r\n\r\nconst showCategoryReducer = (showCategory = null, action) => {\r\n    if (action.type === \"SHOW_CATEGORY_LIST\"){\r\n        return action.payload;\r\n    }\r\n    return showCategory;\r\n}\r\n\r\n\r\nconst cartReducer = (cart = [], action) => {\r\n    let auxCart = [...cart];\r\n\r\n    if(action.type === \"ADD_TO_CART\"){\r\n        auxCart = [...auxCart, action.payload];\r\n\r\n    }else if(action.type === \"REMOVE_FROM_CART\"){\r\n        const removeProduct = action.payload;\r\n        auxCart = [];\r\n        let flag = false;\r\n\r\n        for(let i=0; i<cart.length; i++){\r\n            if(cart[i].product_id === removeProduct.product_id && !flag){\r\n                flag = true;\r\n            }else{\r\n                auxCart.push(cart[i]);\r\n            }\r\n        }\r\n\r\n    }\r\n    \r\n    localStorage.setItem(\"cart\", JSON.stringify(auxCart));\r\n\r\n    return auxCart;\r\n}\r\n\r\nexport default combineReducers({\r\n    products: productsReducer,\r\n    showProduct: showProductReducer,\r\n    showCategory: showCategoryReducer,\r\n    cart: cartReducer,\r\n})","import React from 'react';\r\nimport ReactDOM  from 'react-dom';\r\nimport App from './components/App';\r\n\r\nimport {Provider} from 'react-redux';\r\nimport {createStore } from 'redux';\r\n\r\nimport reducers from './reducers';\r\n\r\n\r\nReactDOM.render(<Provider store={createStore(reducers)}><App /></Provider>, document.getElementById('root'));\r\n"],"sourceRoot":""}